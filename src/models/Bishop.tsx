/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 -t public/bishop.gltf
*/

import type { FC } from 'react'
import React from 'react'

import { useGLTF } from '@react-three/drei'
import type * as THREE from 'three'
import type { GLTF } from 'three-stdlib'

import type { ModelProps } from '.'
import { MeshWrapper, PieceMaterial } from '.'

type GLTFResult = GLTF & {
  nodes: {
    Object001002: THREE.Mesh
  }
  materials: {
    [`Object001_mtl.003`]: THREE.MeshStandardMaterial
  }
}

export const BishopComponent: FC<ModelProps> = ({
  movingTo,
  finishMovingPiece,
  newTileHeight,
  isSelected,
  pieceIsBeingReplaced,
  ...props
}) => {
  const { nodes } = useGLTF(`/bishop.gltf`) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <MeshWrapper
        movingTo={movingTo}
        finishMovingPiece={finishMovingPiece}
        newTileHeight={newTileHeight}
        isSelected={isSelected}
        geometry={nodes.Object001002.geometry}
        pieceIsBeingReplaced={pieceIsBeingReplaced}
      >
        <PieceMaterial color={props.color} isSelected={isSelected} />
      </MeshWrapper>
    </group>
  )
}

useGLTF.preload(`/bishop.gltf`)
